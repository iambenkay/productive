{"version":3,"sources":["components/Button.js","components/BottomBar.js","components/BottomSheet.js","components/Project.js","components/App.js","serviceWorker.js","index.js"],"names":["Button","updateTheme","document","querySelector","style","display","marginBottom","react_default","a","createElement","className","onClick","this","React","Component","BottomBar","id","Button_Button","CreateBottomSheet","_React$Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onFormSubmit","event","preventDefault","refs","name","value","trim","db","put","_id","Date","toJSON","color","setState","valid","onInputChange","onBSBlur","state","inherits","createClass","key","onBlur","onSubmit","htmlFor","type","onChange","ref","placeholder","concat","defaultValue","Project","borderLeft","doc","onDelete","App","deleteProject","window","confirm","remove","PouchDB","projects","changes","since","live","include_docs","descending","on","change","componentDidMount","err","console","log","_this2","allDocs","then","i","rows","catch","e","_this3","Fragment","map","p","Project_Project","BottomBar_BottomBar","BottomSheet_CreateBottomSheet","Boolean","location","hostname","match","ReactDOM","render","components_App","getElementById","addEventListener","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67993494.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Button extends React.Component {\n    updateTheme = () => {\n        document.querySelector('#overlay').style.display = 'block';\n        document.querySelector('.bottom-sheet').style.marginBottom = '0%';\n    }\n    render() {\n        return (\n            <button className=\"main-btn btn text-center px-4 m-1\" onClick={this.updateTheme}>\n                <span className=\"fi-paperclip\"></span> Add Project\n            </button>\n        );\n    }\n}","import React from 'react';\nimport Button from './Button';\n\nexport default class BottomBar extends React.Component {\n    render() {\n        return (\n            <div id=\"bottom-bar\" className=\"d-flex bg-white justify-content-center\">\n                <Button />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport class CreateBottomSheet extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            valid: true,\n        }\n    }\n    onFormSubmit = (event) => {\n        event.preventDefault()\n        if(this.refs.name.value.trim() !== ''){\n            this.props.db.put({\n                '_id': (new Date()).toJSON(),\n                'name': this.refs.name.value,\n                'color': this.refs.color.value,\n            });\n            this.refs.name.value = \"\";\n            document.querySelector('.bottom-sheet').style.marginBottom = '-100%';\n            document.querySelector('#overlay').style.display = 'none';\n        } else {\n            this.setState({valid: false});\n        }\n    }\n    onInputChange = () => {\n        if(this.refs.name.value.trim() === '') this.setState({valid: false});\n        else this.setState({valid: true});\n    }\n    onBSBlur= () => {\n        this.setState({valid: true})\n    }\n    render() {\n        let {valid} = this.state;\n        return (\n            <div className=\"bottom-sheet p-3\" onBlur={this.onBSBlur}>\n                <form className=\"text-center pb-2\" onSubmit={this.onFormSubmit}>\n                    <h3 className=\"my-3\">New Project</h3>\n                    <div className=\"form-group text-left\">\n                        <label htmlFor=\"project-name\">project name</label>\n                        <input type=\"text\" className=\"form-control\"  onChange={this.onInputChange} ref=\"name\" id=\"project-name\" placeholder=\"Enter project name\" />\n                        <span className={`d-${valid ? \"none\" : \"block\"} text-danger`} id='valid'>Must specify name</span>\n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label htmlFor=\"project-color\">project color</label>\n                        <input type=\"color\" className=\"form-control\" ref=\"color\" defaultValue=\"#0e6860\" id=\"project-color\" placeholder=\"Enter project color\" />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary w-50 p-create my-2\">Create</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport class AboutBottomSheet extends React.Component {\n    render() {\n        return (\n            <div className=\"bottom-sheet p-3\" onBlur={this.onBSBlur}>\n                \n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Project extends React.Component {\n    render() {\n        return (\n            <div className=\"p-3 d-flex align-items-center project justify-content-between\" style={{borderLeft: `5px solid ${this.props.doc.color}`}}>{this.props.doc.name}\n                <span className=\"d-flex flex-row align-items-center justify-content-around\">\n                    <span className=\"mx-2 time d-flex align-items-center\"><span className=\"fi-play play pl-1\"></span>{/*<span class=\"ml-1 mr-2\">3:10</span>*/}</span>\n                    <span className=\"material-icons delete\" onClick={() => { this.props.onDelete(this.props.doc) }}>delete</span>\n                </span>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport BottomBar from './BottomBar';\nimport {CreateBottomSheet, AboutBottomSheet} from './BottomSheet';\nimport PouchDB from 'pouchdb-browser';\nimport Project from './Project';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.db = new PouchDB('productive');\n        this.state = {\n            projects: null,\n        }\n        this.db.changes({\n            since: 'now',\n            live: true,\n            include_docs: true,\n            descending: true,\n        }).on('change', (change) => {\n            // received a change\n            this.componentDidMount();\n        }).on('error', (err) => {\n            // handle errors\n            console.log(err);\n        });\n    }\n\n    // function renderChanges(){\n\n    // }\n\n    componentDidMount() {\n        this.db.allDocs({ include_docs: true, descending: true })\n            .then(i => i)\n            .then(i => { this.setState({ projects: i.rows }) })\n            .catch(e => { console.log(e) })\n    }\n\n    deleteProject = (doc) => {\n        if(window.confirm(\"Are you sure you want to delete?\")) this.db.remove(doc)\n    }\n\n    render() {\n        let { projects } = this.state;\n        return (\n            <>\n                <div className=\"toolbar d-flex align-items-center p-3\"><h3 className=\"cursive\">Productive</h3></div>\n                <div id=\"overlay\"></div>\n                <div id=\"main-panel\">\n                    {projects\n                        ? projects.map(p => <Project key={p.doc._id} doc={p.doc} onDelete={this.deleteProject} />)\n                        : \"\"}\n                </div>\n                <BottomBar />\n                <CreateBottomSheet db={this.db} />\n            </>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport './foundation-icons/foundation-icons/foundation-icons.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('mobile'));\n\ndocument.querySelector('#overlay')\n    .addEventListener('click', function(){\n        document.querySelector('.bottom-sheet').style.marginBottom = '-100%';\n        document.querySelector('#overlay').style.display = 'none';\n    })\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}